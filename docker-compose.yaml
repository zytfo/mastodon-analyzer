services:
  redis-server:
    image: redis:7-alpine
    container_name: redis
    restart: always
    env_file:
      - .env
    ports:
      - "6389:6379"
    networks:
      - analyzer_network
    volumes:
      - /home/devops/analyzer-data/redis-data:/data
    command:
      - 'redis-server'
      - '--requirepass ${REDIS_PASSWORD}'
      - '--appendonly yes'
      - '--replica-read-only no'

  rabbitmq:
    image: rabbitmq:3.10-management-alpine
    container_name: rabbitmq
    restart: on-failure
    expose:
      - "5672"
      - "15672"
    networks:
      - analyzer_network
    volumes:
      - /home/devops/analyzer-data/rabbitmq-data:/var/lib/rabbitmq/
      - /home/devops/analyzer-data/rabbitmq-log:/var/log/rabbitmq/
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  analyzer-api:
    build: .
    command: bash -c "alembic upgrade head && gunicorn main:app --config ./gunicorn_config.py"
    restart: always
    networks:
      - analyzer_network

  analyzer-worker:
    container_name: analyzer-worker
    build: .
    command: bash -c "python analyzer_start_celery.py"
    restart: on-failure
    depends_on:
      - rabbitmq
    networks:
      - analyzer_network

  webserver:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - /home/devops/mastodon-analyzer/frontend/build:/var/www/html
    networks:
      - analyzer_network
    sysctls:
      net.ipv4.ip_local_port_range: "10240 65535"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

networks:
  analyzer_network:
    name: analyzer_network
    driver: bridge